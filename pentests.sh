#!/bin/bash

#Setting up dialog box to input ip
DIALOG=${DIALOG=dialog}
tempfile=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
trap "rm -f $tempfile" 0 1 2 5 15

#Setting up a pentest
#Create a folder for each project
#Name the project
#Define results files
#fping.results - pinging network returns these
#nmap.results - nmap outputs these
#results.lst - from greppable nmap file get ip's that are available
#ports.lst - neater version of nmap file with ip's and only their open ports - and reason

function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

dialog --inputbox \
"Please enter the project/customer name" 0 0 2> $tempfile
retval=$?
input=`cat $tempfile`
rm -f $tempfile

cd ~/Documents
mkdir $input
cd $input
correctEntry=1
while [ $correctEntry == "1" ] 
do
	$DIALOG --title "Enter ip range" --clear \
	--inputbox "Please enter the network to scan. eg 10.35.3.0/24" 16 51 2> $tempfile
	retval=$?
	ip=`cat $tempfile`
	rm -f /tmp/inputbox.tmp.$$
	case $retval in
	0)	echo $ip;
		if valid_ip $ip; then
			echo "$ip";
			correctEntry=0;
		fi;;
	1)
	echo "Cancel pressed, Aborting";
	exit 1;;
	255)
	echo "Escape pressed. Aborting";
	exit 1;;
	esac
done

while true
do
$DIALOG --clear --title "MAIN MENU" \
        --menu "Hi, Choose  your favorite HINDI singer:" 20 51 7 \
        "1"  "arp-scan the network" \
        "2" "Ping the network range (uses nmap -sP)" \
        "3" "Scan (nmap) the network (SYN scan)" \
        "4" "fingerprint the results file" \
        "5"  "View amap results file" \
        "6"  "Exit" 2> $tempfile

retval=$?

choice=`cat $tempfile`
 
# make decsion 
case $retval in
  0)
	case $choice in
		1)
		arp-scan --interface=eth0 --localnet > tmp.results.lst;
		cat tmp.results.lst | grep ":" | cut -f1 > tmp.arp.results.lst;
		sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n tmp.arp.results.lst | uniq > arp.results.lst;
		rm tmp.arp.results.lst;
		rm tmp.results.lst;;
		2)
		nmap -sP $ip -oA ping.results;
		cat ping.results.gnmap | grep "Status: Up" | cut -f2 -d " " > tmp.ping.results.lst;
		sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n tmp.ping.results.lst | uniq > ping.results.lst;
		rm tmp.ping.results.lst;;
		3)
		nmap -sS -Pn $ip -oA nmap.results;
		cat nmap.results.gnmap | grep "Ports:\|Status: Up" | cut -f2 -d " " > tmp.nmap.results.lst;
		sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n tmp.nmap.results.lst | uniq > nmap.results.lst;
		rm tmp.nmap.results.lst;;
		4) amap -i nmap.results.gnmap -o amap.results.lst -m;;
		5) cat amap.results.lst;
		echo "hit any key to return";
		read line;;
		6) break;;
		cancel) exit 1;;
	esac;;
  1)
    echo "Cancel pressed.";
exit 1;;
  255)
    echo "ESC pressed.";
exit 1;;
esac

 
done
